# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License.
trigger:
  branches:
    include:
    - main
  paths:
    include:
    - src/*
    exclude:
    - .github/*
    - build/*
    - docs/*
    - pipelines/*
    - scripts/*
    - .gitignore
    - CONTRIBUTING.md
    - LICENSE.txt
    - Microsoft.Graph.Core.sln
    - README.md
    - THIRD PARTY NOTICES
    - appveyor.yml
pr: none
variables:
  PACKAGE_NAME: 'microsoft.graph.core'
  PROJECT_PATH: '.\src\Microsoft.Graph.Core\Microsoft.Graph.Core.csproj'
resources:
  repositories:
  - repository: 1ESPipelineTemplates
    type: git
    name: 1ESPipelineTemplates/1ESPipelineTemplates
    ref: refs/tags/release
extends:
  template: v1/1ES.Official.PipelineTemplate.yml@1ESPipelineTemplates
  parameters:
    pool:
      name: Azure-Pipelines-1ESPT-ExDShared
      image: windows-latest
      os: windows
    customBuildTags:
    - ES365AIMigrationTooling
    stages:
    - stage: build
      jobs:
      - job: build
        templateContext:
          outputs:
          - output: pipelineArtifact
            displayName: 'Publish Artifact: Microsoft.Graph.Core.nupkg and release pipeline scripts'
            targetPath: '$(Build.ArtifactStagingDirectory)'
            artifactName: ProductionReleaseArtifact
        steps:
        - checkout: self
          clean: true
          fetchDepth: 1
        - task: UseDotNet@2
          displayName: 'Use .NET 6'
          inputs:
            version: 6.x
        - task: UseDotNet@2
          displayName: 'Use .NET 8 for trimming validation'
          inputs:
            version: 8.x
        - task: PowerShell@2
          displayName: 'Set Java Home to use Java 11'
          inputs:
            targetType: 'inline'
            script: |
              echo "##vso[task.setvariable variable=JAVA_HOME]$(JAVA_HOME_11_X64)"
              echo "##vso[task.setvariable variable=PATH]$(JAVA_HOME_11_X64)\bin;$(PATH)"
        - task: PowerShell@2
          condition: and(contains(variables['build.sourceBranch'], 'refs/heads/main'), succeeded())
          displayName: 'Validate updated version'
          inputs:
            targetType: filePath
            filePath: 'scripts\ValidateUpdatedNugetVersion.ps1'
            arguments: '-packageName "$(PACKAGE_NAME)" -projectPath "$(PROJECT_PATH)"'
            pwsh: true
          enabled: true
        - powershell: |
            dotnet workload install android macos ios maccatalyst
          displayName: 'Install needed dotnet workloads'
        - task: DotNetCoreCLI@2
          displayName: 'dotnet restore'
          inputs:
            command: restore
            projects: '**/*.csproj'
        - task: DotNetCoreCLI@2
          displayName: 'run tests'
          inputs:
            command: 'test'
            projects: '$(Build.SourcesDirectory)\tests\Microsoft.Graph.DotnetCore.Core.Test\Microsoft.Graph.DotnetCore.Core.Test.csproj'
            arguments: '--configuration Debug --verbosity normal'
        - task: PowerShell@2
          displayName: 'Enable signing'
          inputs:
            targetType: filePath
            filePath: 'scripts\EnableSigning.ps1'
            arguments: '-projectPath "$(PROJECT_PATH)"'
          enabled: true
        - task: DotNetCoreCLI@2
          displayName: 'dotnet build'
          inputs:
            projects: '$(Build.SourcesDirectory)\src\Microsoft.Graph.Core\Microsoft.Graph.Core.csproj'
            arguments: '-c Release --no-incremental -p:IncludeMauiTargets=true'
        - task: EsrpCodeSigning@5
          displayName: 'ESRP DLL Strong Name (Microsoft.Graph.Core)'
          inputs:
            ConnectedServiceName: 'Federated DevX ESRP Managed Identity Connection'
            AppRegistrationClientId: '65035b7f-7357-4f29-bf25-c5ee5c3949f8'
            AppRegistrationTenantId: 'cdc5aeea-15c5-4db6-b079-fcadd2505dc2'
            AuthAKVName: 'akv-prod-eastus'
            AuthCertName: 'ReferenceLibraryPrivateCert'
            AuthSignCertName: 'ReferencePackagePublisherCertificate'
            FolderPath: src/Microsoft.Graph.Core/bin/release
            Pattern: '**\*Microsoft.Graph.Core.dll'
            UseMinimatch: true
            signConfigType: inlineSignParams
            inlineOperation: |
              [
                  {
                      "keyCode": "CP-233863-SN",
                      "operationSetCode": "StrongNameSign",
                      "parameters": [],
                      "toolName": "sign",
                      "toolVersion": "1.0"
                  },
                  {
                      "keyCode": "CP-233863-SN",
                      "operationSetCode": "StrongNameVerify",
                      "parameters": [],
                      "toolName": "sign",
                      "toolVersion": "1.0"
                  }
              ]
            SessionTimeout: 20
            MaxConcurrency: 50
            MaxRetryAttempts: 5
            PendingAnalysisWaitTimeoutMinutes: 5
        - task: EsrpCodeSigning@5
          displayName: 'ESRP DLL CodeSigning (Microsoft.Graph.Core)'
          inputs:
            ConnectedServiceName: 'Federated DevX ESRP Managed Identity Connection'
            AppRegistrationClientId: '65035b7f-7357-4f29-bf25-c5ee5c3949f8'
            AppRegistrationTenantId: 'cdc5aeea-15c5-4db6-b079-fcadd2505dc2'
            AuthAKVName: 'akv-prod-eastus'
            AuthCertName: 'ReferenceLibraryPrivateCert'
            AuthSignCertName: 'ReferencePackagePublisherCertificate'
            FolderPath: src/Microsoft.Graph.Core/bin/release
            Pattern: '**\*Microsoft.Graph.Core.dll'
            UseMinimatch: true
            signConfigType: inlineSignParams
            inlineOperation: |
              [
                  {
                      "keyCode": "CP-230012",
                      "operationSetCode": "SigntoolSign",
                      "parameters": [
                          {
                              "parameterName": "OpusName",
                              "parameterValue": "Microsoft"
                          },
                          {
                              "parameterName": "OpusInfo",
                              "parameterValue": "http://www.microsoft.com"
                          },
                          {
                              "parameterName": "FileDigest",
                              "parameterValue": "/fd \"SHA256\""
                          },
                          {
                              "parameterName": "PageHash",
                              "parameterValue": "/NPH"
                          },
                          {
                              "parameterName": "TimeStamp",
                              "parameterValue": "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
                          }
                      ],
                      "toolName": "sign",
                      "toolVersion": "1.0"
                  },
                  {
                      "keyCode": "CP-230012",
                      "operationSetCode": "SigntoolVerify",
                      "parameters": [],
                      "toolName": "sign",
                      "toolVersion": "1.0"
                  }
              ]
            SessionTimeout: 20
            MaxConcurrency: 50
            MaxRetryAttempts: 5
            PendingAnalysisWaitTimeoutMinutes: 5
        - powershell: |
            dotnet pack $env:BUILD_SOURCESDIRECTORY/src/Microsoft.Graph.Core/Microsoft.Graph.Core.csproj /p:IncludeSymbols=true /p:SymbolPackageFormat=snupkg --no-build --output $env:BUILD_ARTIFACTSTAGINGDIRECTORY --configuration Release
          displayName: dotnet pack
        - task: EsrpCodeSigning@5
          displayName: 'ESRP NuGet CodeSigning (Microsoft.Graph.Core)'
          inputs:
            ConnectedServiceName: 'Federated DevX ESRP Managed Identity Connection'
            AppRegistrationClientId: '65035b7f-7357-4f29-bf25-c5ee5c3949f8'
            AppRegistrationTenantId: 'cdc5aeea-15c5-4db6-b079-fcadd2505dc2'
            AuthAKVName: 'akv-prod-eastus'
            AuthCertName: 'ReferenceLibraryPrivateCert'
            AuthSignCertName: 'ReferencePackagePublisherCertificate'
            FolderPath: '$(Build.ArtifactStagingDirectory)'
            Pattern: '*.nupkg'
            UseMinimatch: true
            signConfigType: inlineSignParams
            inlineOperation: |
              [
                  {
                      "keyCode": "CP-401405",
                      "operationSetCode": "NuGetSign",
                      "parameters": [ ],
                      "toolName": "sign",
                      "toolVersion": "1.0"
                  },
                  {
                      "keyCode": "CP-401405",
                      "operationSetCode": "NuGetVerify",
                      "parameters": [ ],
                      "toolName": "sign",
                      "toolVersion": "1.0"
                  }
              ]
            SessionTimeout: 20
            MaxConcurrency: 50
            MaxRetryAttempts: 5
            PendingAnalysisWaitTimeoutMinutes: 5
        - task: CopyFiles@2
          displayName: 'Copy release scripts to artifact staging directory'
          inputs:
            SourceFolder: '$(Build.SourcesDirectory)'
            Contents: |
              scripts\GetNugetPackageVersion.ps1
              scripts\GetLatestCommitSHA.ps1
            TargetFolder: '$(Build.ArtifactStagingDirectory) '

    - stage: deploy
      condition: and(contains(variables['build.sourceBranch'], 'refs/heads/main'), succeeded())
      dependsOn: build
      jobs:
        - deployment: deploy_nuget
          templateContext:
            type: releaseJob
            isProduction: true
            inputs:
            - input: pipelineArtifact
              artifactName: ProductionReleaseArtifact
              targetPath: $(Pipeline.Workspace)
          pool:
            name: Azure-Pipelines-1ESPT-ExDShared
            os: windows
            image: windows-latest
          dependsOn: []
          environment: nuget-org
          strategy:
            runOnce:
              deploy:
                steps:
                - task: NuGetToolInstaller@1
                  displayName: 'Use NuGet >=5.2.0'
                  inputs:
                    versionSpec: '>=5.2.0'
                    checkLatest: true
                - task: PowerShell@2
                  displayName: 'Get Latest Commit SHA from repo'
                  inputs:
                    targetType: filePath
                    filePath: '$(Pipeline.Workspace)\scripts\GetLatestCommitSHA.ps1'
                    arguments: '-repo "msgraph-sdk-dotnet-core" -owner "microsoftgraph" -branchName "main"'
                    pwsh: true
                - task: PowerShell@2
                  displayName: 'Extract release information to pipeline'
                  inputs:
                    targetType: 'filePath'
                    filePath: $(Pipeline.Workspace)\scripts\GetNugetPackageVersion.ps1
                    pwsh: true
                    arguments: '-packageDirPath "$(Pipeline.Workspace)/"'
                - task: 1ES.PublishNuget@1
                  displayName: 'Push release to NuGet.org'
                  inputs:
                    command: push
                    packageParentPath: '$(Pipeline.Workspace)'
                    packagesToPush: '$(Pipeline.Workspace)\Microsoft.Graph.Core.*.nupkg'
                    nuGetFeedType: external
                    publishFeedCredentials: 'microsoftgraph NuGet connection'
                - task: GitHubRelease@1
                  displayName: 'GitHub release (create)'
                  inputs:
                    gitHubConnection: 'Kiota_Release'
                    target: $(Build.SourceVersion)
                    repositoryName: '$(Build.Repository.Name)'
                    action: edit
                    tag: $(VERSION_STRING)
                    addChangeLog: false
                    assetUploadMode: replace
                    assets: |
                      !**/**
                      $(Pipeline.Workspace)/Microsoft.Graph.Core.*.*nupkg
